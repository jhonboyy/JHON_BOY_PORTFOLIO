---
import { Image } from 'astro:assets';

interface Props {
  imagePath: string;
  description: string;
  project: {
    type: string;
    className: string;
    images: { src: string; alt: string }[];
    captions: {
      left: string;
      right: string;
    };
  };
  projectsImagesClass: string;
}

const { project, projectsImagesClass } = Astro.props as Props;
const { type, className, images, captions } = project;

const imageMap = import.meta.glob<{ default: ImageMetadata }>('../images/*.{svg,webp,png}', { eager: true });

images.forEach(({ src }) => {
  if (!imageMap[src]) {
    throw new Error(`"${src}" does not exist in glob: "../images/*.{svg,webp,png}". See the component for debugging.`);
  }
});

---

<script src="../scripts/lazy-loading-images.js"></script>

{className.includes('slider') ? (
  <figure class={`${className} ${type}`}>
    <div class="slide-track">
      {images.map(({ src, alt }) => (
        <div class="slide">
          <Image 
            src={imageMap[src].default} 
            alt={alt} 
            loading="lazy" 
            class={`${projectsImagesClass} lazy-image`}
            style="border-bottom: 1px solid black"
          />
        </div>
      ))}
    </div>
    <figcaption>
      <span set:html={captions.left}></span>
      <span>{captions.right}</span>
    </figcaption>
  </figure>
) : (
  <figure class={`project ${className} ${type}`}>
    {images.length > 0 && images.map(({ src, alt }) => (
      <div style="background-color: white;">
        <Image 
          src={imageMap[src].default} 
          alt={alt} 
          class={`${projectsImagesClass} lazy-image`}
        />
      </div>
    ))}
    <figcaption>
      <span set:html={captions.left}></span>
      <span>{captions.right}</span>
    </figcaption>
  </figure>
)}
